// Question : Create a Circular Linked List and print  it in reverse order.
public class ReverceCircularLL {
	public class Node{  
	        int data;  
	        Node next;  
	        public Node(int data) {  
	            this.data = data;  
	        }  
	    }  
	    public Node first = null;  
	    public Node last = null;  
	    // add 
	    public void add(int data){  
	        Node newNode = new Node(data);  
	        if(first== null) {   
	        	first = newNode;  
	        	last = newNode;  
	            newNode.next = first;  
	        }  
	        else {  
	        	last.next = newNode;  
	        	last = newNode;  
	        	last.next = first;  
	        }  
	    }  
	    //print
	    public void print() {  
	        Node cur = first;  
	        if(first == null) {  
	            System.out.println("List is empty");  
	        }  
	        else {  
	             do{  
	                System.out.print(" "+ cur.data);  
	                cur= cur.next;  
	            }while(cur !=first);  
	            System.out.println();  
	        }  
	    }  
	    public void reverse(Node current) {  
	        if(current.next == first) {  
	            System.out.print(" "+current.data);  
	            return;  
	        }  
	        reverse(current.next);  
	        System.out.print(" "+current.data);  
	    }  
	    public static void main(String[] args) {  
	    	ReverceCircularLL list  = new ReverceCircularLL();  
	    	list.add(2);  
	    	list.add(4);  
	    	list.add(6);  
	    	list.add(8);  
	    	list.add(10);  
	    	list.add(12);  
	        System.out.println("Circular List: ");  
	        list.print();  
	        System.out.println("Reversed Circular List: ");  
	        list.reverse(list.first);  
	    }  
	}  
